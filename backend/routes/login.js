const express = require('express');const User = require('../models/User');const Doctor = require('../models/Doctor');const Admin = require('../models/Admin');const bcrypt = require('bcrypt');const jwt = require('jsonwebtoken');const router = express.Router();router.post('/', async (req, res) => {  const { email, password, role } = req.body;  try {    if (!email || !password || !role) {      return res.status(400).json({        error: 'Please provide all required fields (email, password, role)'      });    }    let user;    if (role === 'doctor') {      user = await Doctor.findOne({ email: email.toLowerCase() });    } else if (role === 'admin') {      user = await Admin.findOne({ email: email.toLowerCase() });    } else if (role === 'patient') {      user = await User.findOne({ email: email.toLowerCase(), role: 'patient' });    } else {      return res.status(400).json({        error: 'Invalid role specified'      });    }    if (!user) {      return res.status(401).json({        error: 'Invalid credentials. Please check your email and role.'      });    }    const isMatch = await bcrypt.compare(password, user.password);    if (!isMatch) {      return res.status(401).json({        error: 'Invalid credentials. Please check your password.'      });    }    const token = jwt.sign(      {         id: user._id,        role: role,        email: user.email      },      process.env.JWT_SECRET || 'your_jwt_secret',      { expiresIn: '24h' }    );    res.json({      success: true,      token,      role: role,      user: {        id: user._id,        email: user.email,        firstName: user.firstName,        lastName: user.lastName,        role: role      }    });  } catch (error) {    console.error('Login error:', error);    res.status(500).json({      error: 'An error occurred during login. Please try again.'    });  }});module.exports = router;