import React, { useState } from 'react';import { Outlet, Link, useNavigate } from 'react-router-dom';import {  Box,  Toolbar,  List,  ListItem,  ListItemIcon,  ListItemText,  useTheme,  useMediaQuery,  Drawer,  Tooltip,  Typography,} from '@mui/material';import {  Menu as MenuIcon,  Dashboard,  Person,  Settings,  EventNote,  LogoutOutlined,  MedicalServices,  People,} from '@mui/icons-material';import {  ModernAppBar,  ModernMenuButton,  ActionButton,  DashboardContainer,  ContentContainer,} from '../components/shared/StyledComponents';const drawerWidth = 240;const collapsedDrawerWidth = 64;const DoctorLayout = () => {  const [open, setOpen] = useState(false);  const theme = useTheme();  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));  const navigate = useNavigate();  const handleDrawerToggle = () => {    setOpen(!open);  };  const handleLogout = () => {    localStorage.removeItem('token');    localStorage.removeItem('role');    navigate('/login');  };  const menuItems = [    { text: 'Dashboard', icon: <Dashboard />, path: '/doctor/dashboard' },    { text: 'Appointments', icon: <EventNote />, path: '/doctor/appointments' },    { text: 'Patients', icon: <People />, path: '/doctor/patients' },    { text: 'Prescriptions', icon: <MedicalServices />, path: '/doctor/prescriptions' },    { text: 'Profile', icon: <Person />, path: '/doctor/profile' },    { text: 'Settings', icon: <Settings />, path: '/doctor/settings' },  ];  const drawer = (    <Box sx={{ mt: 2 }}>      <List>        {menuItems.map((item) => (          <ListItem             button             key={item.text}             component={Link}             to={item.path}            onClick={isMobile ? handleDrawerToggle : undefined}            sx={{              borderRadius: '12px',              mx: 1,              mb: 0.5,              transition: 'all 0.3s ease',              '&:hover': {                backgroundColor: 'rgba(0, 136, 255, 0.1)',                transform: 'translateX(5px)',              },              '&.active': {                background: 'linear-gradient(45deg, rgba(0, 136, 255, 0.1), rgba(0, 255, 136, 0.1))',                '& .MuiListItemIcon-root': {                  color: '#0088ff',                },                '& .MuiListItemText-primary': {                  color: '#0088ff',                  fontWeight: 600,                },              },            }}          >            <Tooltip title={!open ? item.text : ""} placement="right" arrow>              <ListItemIcon                 sx={{                   minWidth: 40,                  color: 'rgba(0, 0, 0, 0.6)',                  transition: 'color 0.3s ease',                }}              >                {item.icon}              </ListItemIcon>            </Tooltip>            <ListItemText               primary={item.text}               sx={{                 display: open ? 'block' : 'none',                '& .MuiTypography-root': {                  fontWeight: 500,                },              }}             />          </ListItem>        ))}      </List>    </Box>  );  return (    <Box sx={{ display: 'flex' }}>      <ModernAppBar         position="fixed"         sx={{           width: { sm: `calc(100% - ${open ? drawerWidth : collapsedDrawerWidth}px)` },          ml: { sm: `${open ? drawerWidth : collapsedDrawerWidth}px` }        }}      >        <Toolbar sx={{ justifyContent: 'space-between' }}>          <Box sx={{ display: 'flex', alignItems: 'center' }}>            <Tooltip title={open ? "Close Menu" : "Open Menu"} arrow>              <ModernMenuButton                edge="start"                onClick={handleDrawerToggle}                aria-label="toggle menu"              >                <MenuIcon />              </ModernMenuButton>            </Tooltip>            <Typography              variant="h6"              sx={{                ml: 2,                background: 'linear-gradient(45deg, #0088ff, #00ff88)',                backgroundClip: 'text',                WebkitBackgroundClip: 'text',                color: 'transparent',                fontWeight: 700,              }}            >              Doctor Portal            </Typography>          </Box>          <ActionButton            variant="outlined"            startIcon={<LogoutOutlined />}            onClick={handleLogout}          >            Logout          </ActionButton>        </Toolbar>      </ModernAppBar>      <Drawer        variant={isMobile ? 'temporary' : 'permanent'}        open={isMobile ? open : true}        onClose={isMobile ? handleDrawerToggle : undefined}        sx={{          width: open ? drawerWidth : collapsedDrawerWidth,          flexShrink: 0,          '& .MuiDrawer-paper': {            width: open ? drawerWidth : collapsedDrawerWidth,            boxSizing: 'border-box',            borderRight: '1px solid rgba(0, 0, 0, 0.08)',            background: 'rgba(255, 255, 255, 0.95)',            backdropFilter: 'blur(10px)',            transition: 'width 0.3s ease',          },        }}      >        {drawer}      </Drawer>      <DashboardContainer        component="main"        sx={{          flexGrow: 1,          width: '100%',          mt: '64px',        }}      >        <ContentContainer>          <Outlet />        </ContentContainer>      </DashboardContainer>    </Box>  );};export default DoctorLayout; 