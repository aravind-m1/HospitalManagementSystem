const fs = require('fs');const https = require('https');const path = require('path');const imageUrls = {  'hospital-logo.png': 'https:  'hero-image.jpg': 'https:  'patient-management.jpg': 'https:  'doctor-scheduling.jpg': 'https:  'appointment-booking.jpg': 'https:  'medical-records.jpg': 'https:  'doctor-1.jpg': 'https:  'patient-1.jpg': 'https:  'doctor-2.jpg': 'https:  'email-icon.png': 'https:  'phone-icon.png': 'https:  'location-icon.png': 'https:};const downloadImage = (url, filename) => {  const filepath = path.join(__dirname, '../../public/images', filename);  if (fs.existsSync(filepath)) {    console.log(`${filename} already exists, skipping...`);    return;  }  https.get(url, (response) => {    if (response.statusCode === 200) {      response.pipe(fs.createWriteStream(filepath))        .on('error', (err) => console.error(`Error downloading ${filename}:`, err))        .on('finish', () => console.log(`Successfully downloaded ${filename}`));    } else {      console.error(`Failed to download ${filename}: ${response.statusCode}`);    }  }).on('error', (err) => {    console.error(`Error downloading ${filename}:`, err);  });};const imagesDir = path.join(__dirname, '../../public/images');if (!fs.existsSync(imagesDir)) {  fs.mkdirSync(imagesDir, { recursive: true });}Object.entries(imageUrls).forEach(([filename, url]) => {  downloadImage(url, filename);}); 