import React, { useState } from 'react';import {  Box,  TextField,  Button,  Typography,  Container,  Link as MuiLink,  InputAdornment,  IconButton,} from '@mui/material';import { styled } from '@mui/material/styles';import { useNavigate } from 'react-router-dom';import { Person, Lock, Visibility, VisibilityOff } from '@mui/icons-material';import axios from 'axios';const AuthContainer = styled(Box)(({ theme }) => ({  minHeight: '100vh',  display: 'flex',  alignItems: 'center',  justifyContent: 'center',  background: 'linear-gradient(135deg, #2196f3, #e3f2fd)',  padding: theme.spacing(3),}));const GlassBox = styled(Box)(({ theme }) => ({  background: 'rgba(255, 255, 255, 0.15)',  backdropFilter: 'blur(10px)',  borderRadius: '16px',  padding: theme.spacing(4),  width: '100%',  maxWidth: '400px',  boxShadow: '0 8px 32px rgba(0,0,0,0.2)',  textAlign: 'center',  color: '#fff',  position: 'relative',  overflow: 'hidden',  '&::before': {    content: '""',    position: 'absolute',    top: 0,    left: '-50%',    width: '200%',    height: '100%',    background: 'linear-gradient(45deg, transparent, rgba(255,255,255,0.1), transparent)',    transform: 'translateX(-100%)',    transition: 'transform 0.6s',  },  '&:hover::before': {    transform: 'translateX(100%)',  },}));const StyledTextField = styled(TextField)(({ theme }) => ({  marginBottom: theme.spacing(3),  '& .MuiInputBase-root': {    color: '#fff',    background: 'rgba(255, 255, 255, 0.1)',    borderRadius: '8px',    transition: 'all 0.3s ease',    '&:hover': {      background: 'rgba(255, 255, 255, 0.15)',    },    '&.Mui-focused': {      background: 'rgba(255, 255, 255, 0.2)',      boxShadow: '0 0 0 2px rgba(33, 150, 243, 0.5)',    },  },  '& .MuiInputLabel-root': {    color: 'rgba(255, 255, 255, 0.7)',    '&.Mui-focused': {      color: '#fff',    },  },  '& .MuiOutlinedInput-notchedOutline': {    borderColor: 'rgba(255, 255, 255, 0.3)',  },  '& .MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline': {    borderColor: 'rgba(255, 255, 255, 0.5)',  },  '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline': {    borderColor: '#2196f3',  },}));const GlowButton = styled(Button)(({ theme }) => ({  width: '100%',  padding: '12px',  marginTop: theme.spacing(2),  background: '#2196f3',  color: '#fff',  borderRadius: '8px',  fontWeight: 'bold',  textTransform: 'none',  fontSize: '1rem',  transition: 'all 0.3s ease',  '&:hover': {    background: '#1976d2',    boxShadow: '0 0 12px #2196f3',    transform: 'translateY(-2px)',  },}));const Login = () => {  const navigate = useNavigate();  const [formData, setFormData] = useState({    email: '',    password: '',  });  const [showPassword, setShowPassword] = useState(false);  const [error, setError] = useState('');  const handleChange = (e) => {    setFormData({ ...formData, [e.target.name]: e.target.value });    setError('');  };  const handleSubmit = async (e) => {    e.preventDefault();    try {      const response = await axios.post('http:      localStorage.setItem('token', response.data.token);      if (response.data.user.isAdmin) {        navigate('/admin');      } else if (response.data.user.isDoctor) {        navigate('/doctor');      } else {        navigate('/user');      }    } catch (error) {      if (error.response && error.response.data && error.response.data.message) {        setError(error.response.data.message);      } else {        setError('An error occurred. Please try again.');      }    }  };  return (    <AuthContainer>      <GlassBox>        <Typography variant="h4" sx={{ mb: 4, fontWeight: 700, color: '#fff' }}>          Welcome Back ðŸ‘‹        </Typography>        <form onSubmit={handleSubmit}>          <StyledTextField            fullWidth            label="Email"            name="email"            type="email"            value={formData.email}            onChange={handleChange}            required            InputProps={{              startAdornment: (                <InputAdornment position="start">                  <Person sx={{ color: 'rgba(255, 255, 255, 0.7)' }} />                </InputAdornment>              ),            }}          />          <StyledTextField            fullWidth            label="Password"            name="password"            type={showPassword ? 'text' : 'password'}            value={formData.password}            onChange={handleChange}            required            InputProps={{              startAdornment: (                <InputAdornment position="start">                  <Lock sx={{ color: 'rgba(255, 255, 255, 0.7)' }} />                </InputAdornment>              ),              endAdornment: (                <InputAdornment position="end">                  <IconButton                    onClick={() => setShowPassword(!showPassword)}                    edge="end"                    sx={{ color: 'rgba(255, 255, 255, 0.7)' }}                  >                    {showPassword ? <VisibilityOff /> : <Visibility />}                  </IconButton>                </InputAdornment>              ),            }}          />          {error && (            <Typography              color="error"              sx={{                mt: 1,                mb: 2,                backgroundColor: 'rgba(255,0,0,0.1)',                padding: 1,                borderRadius: 1,                color: '#fff',              }}            >              {error}            </Typography>          )}          <GlowButton type="submit">            Login          </GlowButton>          <Typography sx={{ mt: 3, color: 'rgba(255, 255, 255, 0.7)' }}>            Don't have an account?{' '}            <MuiLink              onClick={() => navigate('/register')}              sx={{                color: '#fff',                textDecoration: 'underline',                cursor: 'pointer',                '&:hover': {                  color: '#2196f3',                },              }}            >              Register            </MuiLink>          </Typography>        </form>      </GlassBox>    </AuthContainer>  );};export default Login; 