import React, { useState } from 'react';import {  Box,  Container,  Paper,  Typography,  Card,  CardContent,  Grid,  TextField,  Button,  Chip,  List,  ListItem,  ListItemText,  ListItemIcon,} from '@mui/material';import { styled } from '@mui/material/styles';import {  LocalHospital,  Assignment,  Medication,  MonitorHeart,  Search as SearchIcon,} from '@mui/icons-material';const StyledPaper = styled(Paper)(({ theme }) => ({  padding: theme.spacing(3),  marginTop: theme.spacing(4),  borderRadius: theme.spacing(2),  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',}));const HistoryCard = styled(Card)(({ theme }) => ({  borderRadius: theme.spacing(2),  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.05)',  marginBottom: theme.spacing(2),}));const SearchBox = styled(Box)(({ theme }) => ({  display: 'flex',  gap: theme.spacing(2),  marginBottom: theme.spacing(4),}));const PatientHistory = () => {  const [searchQuery, setSearchQuery] = useState('');  const [selectedPatient] = useState({    id: 1,    name: 'Alice Brown',    age: 35,    gender: 'Female',    bloodGroup: 'A+',    history: [      {        date: '2024-03-15',        type: 'Check-up',        diagnosis: 'Common Cold',        prescription: ['Paracetamol', 'Vitamin C'],        notes: 'Patient reported mild fever and cough',        vitals: {          temperature: '38.2Â°C',          bloodPressure: '120/80',          heartRate: '78 bpm',          oxygenLevel: '98%',        },      },    ],  });  const handleSearch = () => {    console.log('Searching for:', searchQuery);  };  return (    <Container maxWidth="lg">      <Typography variant="h4" sx={{ mt: 4, mb: 4 }}>        Patient History      </Typography>      <SearchBox>        <TextField          fullWidth          label="Search Patient"          variant="outlined"          value={searchQuery}          onChange={(e) => setSearchQuery(e.target.value)}          placeholder="Enter patient name or ID"        />        <Button          variant="contained"          startIcon={<SearchIcon />}          onClick={handleSearch}          sx={{ borderRadius: 2, px: 4 }}        >          Search        </Button>      </SearchBox>      {selectedPatient && (        <>          <StyledPaper>            <Grid container spacing={3}>              <Grid item xs={12} md={6}>                <Typography variant="h6" gutterBottom>                  Patient Information                </Typography>                <List>                  <ListItem>                    <ListItemIcon>                      <LocalHospital color="primary" />                    </ListItemIcon>                    <ListItemText                      primary="Name"                      secondary={selectedPatient.name}                    />                  </ListItem>                  <ListItem>                    <ListItemIcon>                      <Assignment color="primary" />                    </ListItemIcon>                    <ListItemText                      primary="Age"                      secondary={`${selectedPatient.age} years`}                    />                  </ListItem>                  <ListItem>                    <ListItemIcon>                      <MonitorHeart color="primary" />                    </ListItemIcon>                    <ListItemText                      primary="Blood Group"                      secondary={selectedPatient.bloodGroup}                    />                  </ListItem>                </List>              </Grid>            </Grid>          </StyledPaper>          <Typography variant="h6" sx={{ mt: 4, mb: 2 }}>            Medical History          </Typography>          {selectedPatient.history.map((record, index) => (            <HistoryCard key={index}>              <CardContent>                <Box display="flex" justifyContent="space-between" alignItems="center" mb={2}>                  <Typography variant="h6">{record.type}</Typography>                  <Chip label={record.date} color="primary" variant="outlined" />                </Box>                <Grid container spacing={3}>                  <Grid item xs={12} md={6}>                    <Typography variant="subtitle1" color="primary" gutterBottom>                      Diagnosis                    </Typography>                    <Typography gutterBottom>{record.diagnosis}</Typography>                    <Typography variant="subtitle1" color="primary" gutterBottom sx={{ mt: 2 }}>                      Notes                    </Typography>                    <Typography gutterBottom>{record.notes}</Typography>                  </Grid>                  <Grid item xs={12} md={6}>                    <Typography variant="subtitle1" color="primary" gutterBottom>                      Vitals                    </Typography>                    <List dense>                      {Object.entries(record.vitals).map(([key, value]) => (                        <ListItem key={key}>                          <ListItemText                            primary={key.replace(/([A-Z])/g, ' $1').toLowerCase()}                            secondary={value}                          />                        </ListItem>                      ))}                    </List>                    <Typography variant="subtitle1" color="primary" gutterBottom sx={{ mt: 2 }}>                      Prescription                    </Typography>                    <Box display="flex" gap={1} flexWrap="wrap">                      {record.prescription.map((med, idx) => (                        <Chip                          key={idx}                          icon={<Medication />}                          label={med}                          variant="outlined"                        />                      ))}                    </Box>                  </Grid>                </Grid>              </CardContent>            </HistoryCard>          ))}        </>      )}    </Container>  );};export default PatientHistory; 